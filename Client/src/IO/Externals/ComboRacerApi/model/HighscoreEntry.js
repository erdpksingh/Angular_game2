/**
 * Combo Racer API
 * This is the swagger documentation for Combo Racer API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Team', 'model/UserID'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Team'), require('./UserID'));
  } else {
    // Browser globals (root is window)
    if (!root.ComboRacerApi) {
      root.ComboRacerApi = {};
    }
    root.ComboRacerApi.HighscoreEntry = factory(root.ComboRacerApi.ApiClient, root.ComboRacerApi.Team, root.ComboRacerApi.UserID);
  }
}(this, function(ApiClient, Team, UserID) {
  'use strict';




  /**
   * The HighscoreEntry model module.
   * @module model/HighscoreEntry
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>HighscoreEntry</code>.
   * A single entry within the highscore
   * @alias module:model/HighscoreEntry
   * @class
   * @param userId {module:model/UserID} 
   * @param score {Number} 
   */
  var exports = function(userId, score) {
    var _this = this;

    _this['user_id'] = userId;

    _this['score'] = score;

  };

  /**
   * Constructs a <code>HighscoreEntry</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/HighscoreEntry} obj Optional instance to populate.
   * @return {module:model/HighscoreEntry} The populated <code>HighscoreEntry</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('user_id')) {
        obj['user_id'] = UserID.constructFromObject(data['user_id']);
      }
      if (data.hasOwnProperty('team_id')) {
        obj['team_id'] = Team.constructFromObject(data['team_id']);
      }
      if (data.hasOwnProperty('score')) {
        obj['score'] = ApiClient.convertToType(data['score'], 'Number');
      }
      if (data.hasOwnProperty('rank')) {
        obj['rank'] = ApiClient.convertToType(data['rank'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/UserID} user_id
   */
  exports.prototype['user_id'] = undefined;
  /**
   * @member {module:model/Team} team_id
   */
  exports.prototype['team_id'] = undefined;
  /**
   * @member {Number} score
   */
  exports.prototype['score'] = undefined;
  /**
   * @member {Number} rank
   */
  exports.prototype['rank'] = undefined;



  return exports;
}));


